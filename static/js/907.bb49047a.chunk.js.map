{"version":3,"file":"static/js/907.bb49047a.chunk.js","mappings":"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","sources":["utils/http/HttpUtils.ts","api/ApiEndpoint.ts","api/ApiSDK.ts","web/auth/signup/views/SignUpView.tsx"],"sourcesContent":["import SessionStorage from '../storage/UserStorage'\n\nexport interface SuccessResponse<T> {\n    data: T\n}\nexport interface ErrorResponse {\n    data: { error: string }\n}\n\nexport enum ApiError {\n    UNAUTHORIZED,\n    SERVER_ERROR,\n    OTHER\n}\n\nexport interface ErrorDTO {\n    type: ApiError\n    error: string\n}\n\nexport default class HttpUtils {\n\n    private static stringifyParameters(parameters: { [key: string]: string } | null): string {\n        if (parameters == null) {\n            return ''\n        }\n        let result = ''\n        for (let i in parameters) {\n            if (result !== '')\n                result += '&'\n            result += `${i}=${parameters[i]}`\n        }\n        result = (result === '' ? result : '?' + result)\n        return result\n    }\n\n    private static createUrl(domain: string | null, endpoint: string, urlParameters: string | null): string {\n        if (domain != null && domain.slice(-1) !== '/') {\n            domain += '/'\n        }\n        return (domain || '') + endpoint + (urlParameters || '')\n    }\n\n    private static handleHttpResult<T>(\n        response: Response,\n        onSuccess: (data: T) => void,\n        onError: (error: ErrorDTO) => void) {\n        console.log('[HTTP]', response);\n        if (response.redirected || response.status === 302) {\n            console.log('[HTTP] redirection');\n        }\n        if (response.status === 401) {\n            console.log('[HTTP] need login');\n            onError({\n                error: \"Unauthorized access.\",\n                type: ApiError.UNAUTHORIZED\n            });\n        } else {\n            response.text().then(function (text) {\n                const status = response.status;\n                if (status === 200) {\n                    const success: SuccessResponse<T> = JSON.parse(text)\n                    onSuccess(success.data);\n                } else {\n                    const error: ErrorResponse = JSON.parse(text)\n                    onError({\n                        error: error.data.error,\n                        type: ApiError.SERVER_ERROR\n                    });\n                }\n            });\n        }\n    }\n\n    private static httpURL<T>(\n        type: string,\n        domain: string | null,\n        endpoint: string,\n        headers: { [key: string]: string },\n        parameters: { [key: string]: string } | null,\n        onSuccess: (data: T) => void,\n        onError: (error: ErrorDTO) => void) {\n\n        if (SessionStorage.hasSession()) {\n            let token = SessionStorage.getSessionToken()\n            if (token)\n                headers['Authorization'] = token\n        }\n        let urlParameters: string = this.stringifyParameters(parameters)\n        let url: string = this.createUrl(domain, endpoint, urlParameters)\n        console.log('[API_' + type + ']: ' + url)\n\n        fetch(url, {\n            method: type,\n            headers: headers\n        }).then(response => {\n            this.handleHttpResult(response, onSuccess, onError)\n        }).catch(error => {\n            console.log('[API][ERROR]-->', error)\n            onError({\n                error: JSON.stringify(error.error),\n                type: ApiError.OTHER\n            });\n        })\n    }\n\n    private static httpData<T>(\n        type: string,\n        domain: string | null,\n        endpoint: string,\n        headers: { [key: string]: string },\n        data: BodyInit,\n        onSuccess: (data: T) => void,\n        onError: (error: ErrorDTO) => void) {\n\n        if (SessionStorage.hasSession()) {\n            let token = SessionStorage.getSessionToken()\n            if (token)\n                headers['Authorization'] = token\n        }\n        let url: string = this.createUrl(domain, endpoint, null)\n\n        console.log('[API_' + type + ']: ' + url)\n        fetch(url, {\n            method: type,\n            headers: headers,\n            body: data\n        }).then(response => {\n            this.handleHttpResult(response, onSuccess, onError)\n        }).catch(error => {\n            console.log('[API][ERROR]-->', error)\n            onError({\n                error: error.error,\n                type: ApiError.OTHER\n            });\n        })\n    }\n\n    static get<T>(domain: string | null, endpoint: string, parameters: { [key: string]: string } | null, onSuccess: (data: T) => void, onError: (error: ErrorDTO) => void) {\n        let headers: { [key: string]: string } = {}\n        headers['Access-Control-Allow-Origin'] = '*'\n        this.httpURL('GET', domain, endpoint, headers, parameters, onSuccess, onError)\n    }\n\n    static post<T>(domain: string | null, endpoint: string, data: {}, onSuccess: (data: T) => void, onError: (error: ErrorDTO) => void) {\n        let headers: { [key: string]: string } = {}\n        headers['Content-Type'] = 'application/json'\n        headers['Accept'] = 'application/json'\n        this.httpData('POST', domain, endpoint, headers, JSON.stringify(data), onSuccess, onError)\n    }\n\n    static put<T>(domain: string | null, endpoint: string, data: {}, onSuccess: (data: T) => void, onError: (error: ErrorDTO) => void) {\n        let headers: { [key: string]: string } = {}\n        headers['Content-Type'] = 'application/json'\n        headers['Accept'] = 'application/json'\n        this.httpData('PUT', domain, endpoint, headers, JSON.stringify(data), onSuccess, onError)\n    }\n\n    static delete<T>(domain: string | null, endpoint: string, data: {}, onSuccess: (data: T) => void, onError: (error: ErrorDTO) => void) {\n        let headers: { [key: string]: string } = {}\n        headers['Content-Type'] = 'application/json'\n        headers['Accept'] = 'application/json'\n        this.httpData('DELETE', domain, endpoint, headers, JSON.stringify(data), onSuccess, onError)\n    }\n}","export const ApiEndpoint = {\n    AUTH_Login: 'api/auth/login',\n    AUTH_Signup: 'api/auth/signup',\n    USER_Get: 'api/user/get',\n}","import {UserApi} from \"./user/UserApi\";\nimport {AuthApi} from \"./auth/AuthApi\";\nimport {UserDTO} from \"./user/UserDTO\";\nimport HttpUtils from \"../utils/http/HttpUtils\";\nimport {ApiEndpoint} from \"./ApiEndpoint\";\nimport {TokenDTO} from \"./auth/TokenDTO\";\nimport {LoginRequest} from \"./auth/LoginRequest\";\nimport {SignupRequest} from \"./auth/SignupRequest\";\n\nconst domain: string | null = process.env.REACT_APP_API_ENDPOINT || null;\n\nexport default class ApiSDK {\n\n    static auth: AuthApi = {\n        login: function (request: LoginRequest): Promise<TokenDTO> {\n            return new Promise<TokenDTO>(function(resolve, reject) {\n                HttpUtils.post(domain, ApiEndpoint.AUTH_Login, request, resolve, reject);\n            });\n        },\n        signup: function (request: SignupRequest): Promise<UserDTO> {\n            return new Promise<UserDTO>(function(resolve, reject) {\n                HttpUtils.post(domain, ApiEndpoint.AUTH_Signup, request, resolve, reject);\n            });\n        }\n    }\n\n    static user: UserApi = {\n        get: function (): Promise<UserDTO> {\n            return new Promise<UserDTO>(function(resolve, reject) {\n                HttpUtils.get(domain, ApiEndpoint.USER_Get, null, resolve, reject);\n            });\n        }\n    }\n}","import {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {Alert, Button, CloseButton} from \"react-bootstrap\";\nimport './SignupView.scss';\nimport ApiSDK from \"../../../../api/ApiSDK\";\nimport SessionStorage from \"../../../../utils/storage/UserStorage\";\n\ninterface SignUpViewProperties extends RouteComponentProps {\n}\n\ntype SignUpViewState = {\n    submitBusy: boolean,\n    email: string,\n    username: string,\n    password: string,\n    error: string | null\n}\n\nclass SignUpView extends Component<SignUpViewProperties, SignUpViewState> {\n\n    constructor(props: SignUpViewProperties) {\n        super(props)\n        this.state = {\n            submitBusy: false,\n            email: '',\n            username: '',\n            password: '',\n            error: null\n        }\n        this.signup = this.signup.bind(this)\n        this.goToLogin = this.goToLogin.bind(this)\n        this.goToMain = this.goToMain.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleEmailChange = this.handleEmailChange.bind(this)\n        this.handleUsernameChange = this.handleUsernameChange.bind(this)\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\n    }\n\n    signup = (email: string, username: string, password: string) => {\n        // TODO do form error checks\n        this.setState({submitBusy: true, error: null})\n        ApiSDK.auth.signup({email: email, username: username, password: password}).then(_ => {\n            ApiSDK.auth.login({email: email, password: password}).then(response => {\n                this.setState({submitBusy: false})\n                SessionStorage.storeSession(response.token)\n                this.props.history.push('/home')\n            }, e => {\n                console.log('error', e)\n                this.setState({submitBusy: false, error: e.error})\n            })\n        }, e => {\n            console.log('error', e)\n            this.setState({submitBusy: false, error: e.error})\n        })\n    }\n\n    handleSubmit = async (e: any) => {\n        e.preventDefault();\n        this.signup(this.state.email, this.state.username, this.state.password)\n    }\n\n    handleEmailChange = async (e: any) => {\n        this.setState({email: e.target.value})\n    }\n\n    handleUsernameChange = async (e: any) => {\n        this.setState({username: e.target.value})\n    }\n\n    handlePasswordChange = async (e: any) => {\n        this.setState({password: e.target.value})\n    }\n\n    goToLogin = (e: any) => {\n        e.preventDefault();\n        this.props.history.push('/login')\n    }\n\n    goToMain = (e: any) => {\n        e.preventDefault();\n        this.props.history.push('/')\n    }\n\n\n    render() {\n        return <div className=\"content signup\">\n            <div className=\"exit-btn\">\n                <CloseButton onClick={this.goToMain} />\n            </div>\n            <div className=\"wrapper\">\n                <form onSubmit={this.handleSubmit}>\n                    <h3>Register</h3>\n                    {this.state.error != null && <Alert variant={'danger'}>{this.state.error}</Alert>}\n                    <div className=\"form-group\">\n                        <label>Email address</label>\n                        <input type=\"email\" value={this.state.email} onChange={this.handleEmailChange} className=\"form-control\" placeholder=\"Enter email\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Username</label>\n                        <input type=\"text\" value={this.state.username} onChange={this.handleUsernameChange} className=\"form-control\" placeholder=\"Enter username\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input type=\"password\" value={this.state.password} onChange={this.handlePasswordChange} className=\"form-control\" placeholder=\"Enter password\"/>\n                    </div>\n                    <Button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={this.state.submitBusy}>\n                        {this.state.submitBusy && <i className=\"fa fa-refresh fa-spin\" style={{ marginRight: \"5px\" }}/>}\n                        {this.state.submitBusy && <span>Logging-in..</span>}\n                        {!this.state.submitBusy && <span>Submit</span>}\n                    </Button>\n                    <p className=\"is-registered text-right\">\n                        Already registered <a href=\"/#\" onClick={this.goToLogin}>sign in?</a>\n                    </p>\n                </form>\n            </div>\n        </div>\n    }\n}\n\nexport default withRouter(SignUpView);"],"names":["ApiError","HttpUtils","parameters","result","i","domain","endpoint","urlParameters","slice","response","onSuccess","onError","console","log","redirected","status","error","type","UNAUTHORIZED","text","then","success","JSON","parse","data","SERVER_ERROR","headers","SessionStorage","token","this","stringifyParameters","url","createUrl","fetch","method","handleHttpResult","catch","stringify","OTHER","body","httpURL","httpData","ApiEndpoint","process","REACT_APP_API_ENDPOINT","ApiSDK","auth","login","request","Promise","resolve","reject","post","signup","user","get","SignUpView","props","email","username","password","setState","submitBusy","_","history","push","e","handleSubmit","preventDefault","state","handleEmailChange","target","value","handleUsernameChange","handlePasswordChange","goToLogin","goToMain","bind","className","CloseButton","onClick","onSubmit","Alert","variant","onChange","placeholder","Button","disabled","style","marginRight","href","Component","withRouter"],"sourceRoot":""}