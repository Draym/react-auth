{"version":3,"sources":["utils/storage/UserStorage.ts","utils/auth/AuthUtils.ts","routes/routes.auth.ts","routes/routes.home.ts","routes/routes.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["SessionStorage","localStorage","getItem","this","sessionKey","removeItem","token","setItem","AuthUtils","hasSession","LoginView","React","lazy","SignUpView","base","process","routes","name","path","exact","component","restrictedBy","validate","requireNoSession","redirectOnFailure","HomeView","requireSession","MainView","Page404View","routesAuth","routesHome","library","add","faGithub","faHome","faGlobe","App","loading","className","basename","fallback","map","route","idx","render","props","to","pathname","state","from","location","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mKACqBA,E,+FACjB,WACI,MAAM,uB,6BAGV,WACI,OAAOC,aAAaC,QAAQC,KAAKC,gB,0BAGrC,WACIH,aAAaI,WAAWF,KAAKC,gB,0BAGjC,SAAoBE,GAChBL,aAAaM,QAAQJ,KAAKC,aAAcE,K,wBAG5C,WACI,OAAkD,MAA3CL,aAAaC,QAAQC,KAAKC,kB,yOCjBpBI,E,mGAEjB,WACI,OAAOR,IAAeS,e,8BAG1B,WACI,OAAQT,IAAeS,iB,KCLzBC,EAAYC,IAAMC,MAAK,kBAAM,uDAC7BC,EAAaF,IAAMC,MAAK,kBAAM,uDAE9BE,EAAeC,cAmBNC,EAjBa,CACxB,CACIC,KAAM,QACNC,KAAK,GAAD,OAAKJ,EAAL,UACJK,OAAO,EACPC,UAAWV,EACXW,aAAc,CAACC,SAAUd,EAAUe,iBAAkBC,kBAAmB,UAE5E,CACIP,KAAM,SACNC,KAAK,GAAD,OAAKJ,EAAL,WACJK,OAAO,EACPC,UAAWP,EACXQ,aAAc,CAACC,SAAUd,EAAUe,iBAAkBC,kBAAmB,WClB1EC,EAAWd,IAAMC,MAAK,kBAAM,iCAcnBI,EAVa,CACxB,CACIC,KAAM,OACNC,KAAK,GAAD,OALSH,cAKT,SACJI,OAAO,EACPC,UAAWK,EACXJ,aAAc,CAACC,SAAUd,EAAUkB,eAAgBF,kBAAmB,OCRxEG,EAAWhB,IAAMC,MAAK,kBAAM,iCAC5BgB,EAAcjB,IAAMC,MAAK,kBAAM,iCAE/BE,EAAeC,cASNC,EAPU,CACrB,CAACC,KAAM,UAAWC,KAAK,GAAD,OAAKJ,EAAL,KAAcK,OAAO,EAAMC,UAAWO,EAAUN,aAAc,MACpF,CAACJ,KAAM,WAAYC,KAAK,GAAD,OAAKJ,EAAL,QAAiBK,OAAO,EAAMC,UAAWQ,EAAaP,aAAc,OAFtE,mBAGlBQ,GAHkB,YAIlBC,I,OCNPC,IAAQC,IAAIC,IAAUC,IAAQC,KAE9B,IAQqBC,E,4MAEjBC,QAAU,kBAAM,qBAAKC,UAAU,mCAAf,yB,4CAEhB,WACI,OAAO,qBAAKA,UAAU,MAAf,SACH,cAAC,IAAD,CAAeC,SAdJxB,cAcX,SACI,cAAC,WAAD,CAAUyB,SAAUrC,KAAKkC,UAAzB,SACI,eAAC,IAAD,WACKrB,EAAOyB,KAAI,SAACC,EAAOC,GAChB,OAAOD,EAAMtB,UACT,cAAC,IAAD,CAEIF,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbyB,OAAQ,SAAAC,GAAK,OACc,MAAtBH,EAAMrB,cAAwBqB,EAAMrB,aAAaC,WAC9C,cAACoB,EAAMtB,UAAP,eAAqByB,IACrB,cAAC,IAAD,CAAUC,GAAI,CACVC,SAAUL,EAAMrB,aAAaG,kBAC7BwB,MAAO,CAACC,KAAMJ,EAAMK,eAR3BP,GAWT,QAER,cAAC,IAAD,CAAUzB,KAAK,IAAI4B,GAAI,sB,GAzBdK,aCPlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASjB,OACL,cAAC,IAAMkB,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.2ea73529.chunk.js","sourcesContent":["\nexport default class SessionStorage {\n    private static sessionKey(): string {\n        return `auth-session-token`;\n    }\n\n    static getSessionToken(): string | null {\n        return localStorage.getItem(this.sessionKey());\n    }\n\n    static clearSession() {\n        localStorage.removeItem(this.sessionKey());\n    }\n\n    static storeSession(token: string) {\n        localStorage.setItem(this.sessionKey(), token);\n    }\n\n    static hasSession(): boolean {\n        return localStorage.getItem(this.sessionKey()) != null;\n    }\n}\n","import SessionStorage from \"../storage/UserStorage\";\n\nexport default class AuthUtils {\n\n    static requireSession(): boolean {\n        return SessionStorage.hasSession()\n    }\n\n    static requireNoSession(): boolean {\n        return !SessionStorage.hasSession()\n    }\n}","import React from \"react\";\nimport AuthUtils from \"../utils/auth/AuthUtils\";\nimport RoutePath from \"./Route\";\n\nconst LoginView = React.lazy(() => import(\"../web/auth/views/login/LoginView\"));\nconst SignUpView = React.lazy(() => import(\"../web/auth/views/signup/SignUpView\"));\n\nconst base: string = process.env.REACT_APP_BASE_URL || '';\n\nconst routes: RoutePath[] = [\n    {\n        name: 'Login',\n        path: `${base}/login`,\n        exact: true,\n        component: LoginView,\n        restrictedBy: {validate: AuthUtils.requireNoSession, redirectOnFailure: '/home'}\n    },\n    {\n        name: 'Signup',\n        path: `${base}/signup`,\n        exact: true,\n        component: SignUpView,\n        restrictedBy: {validate: AuthUtils.requireNoSession, redirectOnFailure: '/home'}\n    },\n];\n\nexport default routes;","import React from \"react\";\nimport AuthUtils from \"../utils/auth/AuthUtils\";\nimport RoutePath from \"./Route\";\n\nconst HomeView = React.lazy(() => import(\"../web/home/views/HomeView\"));\n\nconst base: string = process.env.REACT_APP_BASE_URL || '';\n\nconst routes: RoutePath[] = [\n    {\n        name: 'Home',\n        path: `${base}/home`,\n        exact: true,\n        component: HomeView,\n        restrictedBy: {validate: AuthUtils.requireSession, redirectOnFailure: '/'}\n    },\n];\n\nexport default routes;","import React from \"react\";\nimport RoutePath from \"./Route\";\n\nimport routesAuth from \"./routes.auth\";\nimport routesHome from \"./routes.home\";\n\nconst MainView = React.lazy(() => import(\"../web/main/views/MainView\"));\nconst Page404View = React.lazy(() => import(\"../web/error/views/Page404View\"));\n\nconst base: string = process.env.REACT_APP_BASE_URL || '';\n\nconst routes: RoutePath[] = [\n    {name: 'Default', path: `${base}/`, exact: true, component: MainView, restrictedBy: null},\n    {name: 'Page 404', path: `${base}/404`, exact: true, component: Page404View, restrictedBy: null},\n    ...routesAuth,\n    ...routesHome\n];\n\nexport default routes;","import './App.scss';\nimport {Component, Suspense} from \"react\";\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\n\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faGlobe, faHome} from '@fortawesome/free-solid-svg-icons';\nimport {faGithub} from '@fortawesome/free-brands-svg-icons';\nimport routes from \"./routes/routes\";\n\nlibrary.add(faGithub, faHome, faGlobe);\n\nconst routerBaseName = process.env.PUBLIC_URL;\n\ninterface AppProperties {\n}\n\ninterface AppState {\n}\n\nexport default class App extends Component<AppProperties, AppState> {\n\n    loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>;\n\n    render() {\n        return <div className=\"App\">\n            <BrowserRouter basename={routerBaseName}>\n                <Suspense fallback={this.loading()}>\n                    <Switch>\n                        {routes.map((route, idx) => {\n                            return route.component ? (\n                                <Route\n                                    key={idx}\n                                    path={route.path}\n                                    exact={route.exact}\n                                    render={props => (\n                                        (route.restrictedBy == null || route.restrictedBy.validate() ?\n                                            <route.component {...props} /> :\n                                            <Redirect to={{\n                                                pathname: route.restrictedBy.redirectOnFailure,\n                                                state: {from: props.location}\n                                            }}/>)\n                                    )}/>\n                            ) : null;\n                        })}\n                        <Redirect path=\"*\" to={'/404'}/>\n                    </Switch>\n                </Suspense>\n            </BrowserRouter>\n        </div>\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}