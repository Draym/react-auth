{"version":3,"file":"static/js/502.8a8edc25.chunk.js","mappings":"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","sources":["utils/http/HttpUtils.ts","api/ApiEndpoint.ts","api/ApiSDK.ts","web/home/views/loading/HomeLoading.tsx","web/home/views/navbar/HomeNavbar.tsx","web/home/views/footer/HomeFooter.tsx","web/home/views/HomeView.tsx"],"sourcesContent":["import SessionStorage from '../storage/UserStorage'\n\nexport interface SuccessResponse<T> {\n    data: T\n}\nexport interface ErrorResponse {\n    data: { error: string }\n}\n\nexport enum ApiError {\n    UNAUTHORIZED,\n    SERVER_ERROR,\n    OTHER\n}\n\nexport interface ErrorDTO {\n    type: ApiError\n    error: string\n}\n\nexport default class HttpUtils {\n\n    private static stringifyParameters(parameters: { [key: string]: string } | null): string {\n        if (parameters == null) {\n            return ''\n        }\n        let result = ''\n        for (let i in parameters) {\n            if (result !== '')\n                result += '&'\n            result += `${i}=${parameters[i]}`\n        }\n        result = (result === '' ? result : '?' + result)\n        return result\n    }\n\n    private static createUrl(domain: string | null, endpoint: string, urlParameters: string | null): string {\n        if (domain != null && domain.slice(-1) !== '/') {\n            domain += '/'\n        }\n        return (domain || '') + endpoint + (urlParameters || '')\n    }\n\n    private static handleHttpResult<T>(\n        response: Response,\n        onSuccess: (data: T) => void,\n        onError: (error: ErrorDTO) => void) {\n        console.log('[HTTP]', response);\n        if (response.redirected || response.status === 302) {\n            console.log('[HTTP] redirection');\n        }\n        if (response.status === 401) {\n            console.log('[HTTP] need login');\n            onError({\n                error: \"Unauthorized access.\",\n                type: ApiError.UNAUTHORIZED\n            });\n        } else {\n            response.text().then(function (text) {\n                const status = response.status;\n                if (status === 200) {\n                    const success: SuccessResponse<T> = JSON.parse(text)\n                    onSuccess(success.data);\n                } else {\n                    const error: ErrorResponse = JSON.parse(text)\n                    onError({\n                        error: error.data.error,\n                        type: ApiError.SERVER_ERROR\n                    });\n                }\n            });\n        }\n    }\n\n    private static httpURL<T>(\n        type: string,\n        domain: string | null,\n        endpoint: string,\n        headers: { [key: string]: string },\n        parameters: { [key: string]: string } | null,\n        onSuccess: (data: T) => void,\n        onError: (error: ErrorDTO) => void) {\n\n        if (SessionStorage.hasSession()) {\n            let token = SessionStorage.getSessionToken()\n            if (token)\n                headers['Authorization'] = token\n        }\n        let urlParameters: string = this.stringifyParameters(parameters)\n        let url: string = this.createUrl(domain, endpoint, urlParameters)\n        console.log('[API_' + type + ']: ' + url)\n\n        fetch(url, {\n            method: type,\n            headers: headers\n        }).then(response => {\n            this.handleHttpResult(response, onSuccess, onError)\n        }).catch(error => {\n            console.log('[API][ERROR]-->', error)\n            onError({\n                error: JSON.stringify(error.error),\n                type: ApiError.OTHER\n            });\n        })\n    }\n\n    private static httpData<T>(\n        type: string,\n        domain: string | null,\n        endpoint: string,\n        headers: { [key: string]: string },\n        data: BodyInit,\n        onSuccess: (data: T) => void,\n        onError: (error: ErrorDTO) => void) {\n\n        if (SessionStorage.hasSession()) {\n            let token = SessionStorage.getSessionToken()\n            if (token)\n                headers['Authorization'] = token\n        }\n        let url: string = this.createUrl(domain, endpoint, null)\n\n        console.log('[API_' + type + ']: ' + url)\n        fetch(url, {\n            method: type,\n            headers: headers,\n            body: data\n        }).then(response => {\n            this.handleHttpResult(response, onSuccess, onError)\n        }).catch(error => {\n            console.log('[API][ERROR]-->', error)\n            onError({\n                error: error.error,\n                type: ApiError.OTHER\n            });\n        })\n    }\n\n    static get<T>(domain: string | null, endpoint: string, parameters: { [key: string]: string } | null, onSuccess: (data: T) => void, onError: (error: ErrorDTO) => void) {\n        let headers: { [key: string]: string } = {}\n        headers['Access-Control-Allow-Origin'] = '*'\n        this.httpURL('GET', domain, endpoint, headers, parameters, onSuccess, onError)\n    }\n\n    static post<T>(domain: string | null, endpoint: string, data: {}, onSuccess: (data: T) => void, onError: (error: ErrorDTO) => void) {\n        let headers: { [key: string]: string } = {}\n        headers['Content-Type'] = 'application/json'\n        headers['Accept'] = 'application/json'\n        this.httpData('POST', domain, endpoint, headers, JSON.stringify(data), onSuccess, onError)\n    }\n\n    static put<T>(domain: string | null, endpoint: string, data: {}, onSuccess: (data: T) => void, onError: (error: ErrorDTO) => void) {\n        let headers: { [key: string]: string } = {}\n        headers['Content-Type'] = 'application/json'\n        headers['Accept'] = 'application/json'\n        this.httpData('PUT', domain, endpoint, headers, JSON.stringify(data), onSuccess, onError)\n    }\n\n    static delete<T>(domain: string | null, endpoint: string, data: {}, onSuccess: (data: T) => void, onError: (error: ErrorDTO) => void) {\n        let headers: { [key: string]: string } = {}\n        headers['Content-Type'] = 'application/json'\n        headers['Accept'] = 'application/json'\n        this.httpData('DELETE', domain, endpoint, headers, JSON.stringify(data), onSuccess, onError)\n    }\n}","export const ApiEndpoint = {\n    AUTH_Login: 'api/auth/login',\n    AUTH_Signup: 'api/auth/signup',\n    USER_Get: 'api/user/get',\n}","import {UserApi} from \"./user/UserApi\";\nimport {AuthApi} from \"./auth/AuthApi\";\nimport {UserDTO} from \"./user/UserDTO\";\nimport HttpUtils from \"../utils/http/HttpUtils\";\nimport {ApiEndpoint} from \"./ApiEndpoint\";\nimport {TokenDTO} from \"./auth/TokenDTO\";\nimport {LoginRequest} from \"./auth/LoginRequest\";\nimport {SignupRequest} from \"./auth/SignupRequest\";\n\nconst domain: string | null = process.env.REACT_APP_API_ENDPOINT || null;\n\nexport default class ApiSDK {\n\n    static auth: AuthApi = {\n        login: function (request: LoginRequest): Promise<TokenDTO> {\n            return new Promise<TokenDTO>(function(resolve, reject) {\n                HttpUtils.post(domain, ApiEndpoint.AUTH_Login, request, resolve, reject);\n            });\n        },\n        signup: function (request: SignupRequest): Promise<UserDTO> {\n            return new Promise<UserDTO>(function(resolve, reject) {\n                HttpUtils.post(domain, ApiEndpoint.AUTH_Signup, request, resolve, reject);\n            });\n        }\n    }\n\n    static user: UserApi = {\n        get: function (): Promise<UserDTO> {\n            return new Promise<UserDTO>(function(resolve, reject) {\n                HttpUtils.get(domain, ApiEndpoint.USER_Get, null, resolve, reject);\n            });\n        }\n    }\n}","import {Component} from \"react\";\n\ntype HomeLoadingProperties = {}\n\ntype HomeLoadingState = {}\n\nexport default class HomeLoading extends Component<HomeLoadingProperties, HomeLoadingState> {\n\n    render() {\n        return <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n    }\n}","import {Component} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ntype HomeNavbarProperties = {}\n\ntype HomeNavbarState = {}\n\nexport default class HomeNavbar extends Component<HomeNavbarProperties, HomeNavbarState> {\n\n    render() {\n        return <nav className=\"navbar flex-md-nowrap p-0 shadow\">\n            <span><FontAwesomeIcon icon={['fas', \"home\"]}/> Home</span>\n        </nav>\n    }\n}","import {Component} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ntype HomeFooterProperties = {}\n\ntype HomeFooterState = {}\n\nexport default class HomeFooter extends Component<HomeFooterProperties, HomeFooterState> {\n\n    render() {\n        return <footer className=\"text-center\">\n            <div className=\"footer-content\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <span className=\"ml-auto\"><a href=\"https://github.com/Draym\" target=\"https://github.com/Draym\"><FontAwesomeIcon icon={['fab', \"github\"]}/> Github</a> &copy; 2020. kevin.andres@epitech.eu</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    }\n}","import {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {Button} from \"react-bootstrap\";\n\nimport HomeLoading from \"./loading/HomeLoading\";\nimport HomeNavbar from \"./navbar/HomeNavbar\";\nimport HomeFooter from \"./footer/HomeFooter\";\nimport SessionStorage from \"../../../utils/storage/UserStorage\";\nimport ApiSDK from \"../../../api/ApiSDK\";\n\ninterface HomeViewProperties extends RouteComponentProps {\n}\n\ntype HomeViewState = {\n    loading: boolean,\n    user: { id: string, email: string, username: string } | null\n}\n\nclass HomeView extends Component<HomeViewProperties, HomeViewState> {\n    constructor(props: HomeViewProperties) {\n        super(props)\n        this.state = {\n            loading: true,\n            user: null\n        }\n        this.logout = this.logout.bind(this)\n    }\n\n    componentDidMount() {\n        ApiSDK.user.get().then(r => {\n            this.setState({\n                loading: false,\n                user: {\n                    id: r.id, email: r.email, username: r.username\n                }\n            })\n        })\n    }\n\n    logout = () => {\n        SessionStorage.clearSession()\n        this.props.history.push('/')\n    }\n\n    render() {\n        if (this.state.loading || this.state.user == null) {\n            return <HomeLoading/>\n        } else {\n            return <div className=\"content\">\n                <HomeNavbar/>\n                <div className=\"container-fluid mt-5\">\n                    <h2>Welcome to your personal home {this.state.user.username}</h2>\n                    <Button variant=\"secondary\" onClick={this.logout}>\n                        Logout\n                    </Button>\n                </div>\n                <HomeFooter/>\n            </div>\n        }\n    }\n}\n\nexport default withRouter(HomeView);"],"names":["ApiError","HttpUtils","parameters","result","i","domain","endpoint","urlParameters","slice","response","onSuccess","onError","console","log","redirected","status","error","type","UNAUTHORIZED","text","then","success","JSON","parse","data","SERVER_ERROR","headers","SessionStorage","token","this","stringifyParameters","url","createUrl","fetch","method","handleHttpResult","catch","stringify","OTHER","body","httpURL","httpData","ApiEndpoint","process","REACT_APP_API_ENDPOINT","ApiSDK","auth","login","request","Promise","resolve","reject","post","signup","user","get","HomeLoading","className","Component","HomeNavbar","icon","HomeFooter","href","target","HomeView","props","logout","history","push","state","loading","bind","r","setState","id","email","username","Button","variant","onClick","withRouter"],"sourceRoot":""}